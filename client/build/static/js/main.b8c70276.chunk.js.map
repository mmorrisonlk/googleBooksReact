{"version":3,"sources":["components/Form.js","components/Book.js","utils/API.js","pages/Home.js","pages/Saved.js","pages/NoMatch.js","App.js","reportWebVitals.js","index.js"],"names":["Form","q","handleInputChange","handleFormSubmit","className","htmlFor","id","type","value","placeholder","name","onChange","required","onClick","Book","title","subtitle","authors","link","description","image","Button","ListGroupItem","Row","Col","size","target","rel","href","src","alt","axios","get","entry","console","log","params","book","post","delete","Home","state","books","message","event","setState","getBooks","API","then","res","data","catch","preventDefault","handleBookSave","find","googleId","volumeInfo","infoLink","imageLinks","thumbnail","Container","Jumbotron","Card","icon","this","length","ListGroup","map","join","Component","Saved","getSavedBooks","err","handleBooksDelete","_id","NoMatch","fluid","App","Navbar","bg","variant","NavbarBrand","Nav","Link","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8c70276.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Form({ q, handleInputChange, handleFormSubmit}) {\r\n    return(\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Query\">\r\n                    <strong>Book</strong>\r\n                </label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    id=\"Title\"\r\n                    type=\"text\"\r\n                    value={q}\r\n                    placeholder=\"The Martian\"\r\n                    name=\"q\"\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n            </div>\r\n            <div className=\"pull-right\">\r\n                <button\r\n                    onClick={handleFormSubmit}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-lg btn-danger float-right\"\r\n                >\r\n                    Search\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\nimport { ListGroupItem } from \"react-bootstrap\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nfunction Book ({ title, subtitle, authors, link, description, image, Button }) {\r\n    return (\r\n        <ListGroupItem>\r\n            <Row className=\"flex-wrap-reverse\">\r\n                <Col size=\"md-8\">\r\n                    <h3 className=\"font-italic\">{title}</h3>\r\n                    {subtitle && <h5 className=\"font-italic\">{subtitle}</h5>}\r\n                </Col>\r\n                <Col size=\"md-4\">\r\n                    <div className=\"btn-container\">\r\n                        <a className=\"btn btn-light\" target=\"_blank\" rel=\"noopener noreferral\" href={link}>\r\n                            View\r\n                        </a>\r\n                        <Button />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col size=\"md-6\">\r\n                    <p className=\"font-italic small\">Written by {authors}</p>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col size=\"sm-4 md-2\">\r\n                    <img className=\"img-thumbnail img-fluid\" src={image} alt={title}></img>\r\n                </Col>\r\n                <Col size=\"sm-8 md-10\">\r\n                    <p>{description}</p>\r\n                </Col>\r\n            </Row>\r\n        </ListGroupItem>\r\n    );\r\n}\r\n\r\nexport default Book;","import axios from \"axios\";\r\n\r\nexport default {\r\n    getSavedBooks: function() {\r\n        return axios.get(\"/api/books/\");\r\n    },\r\n    getBooks: function(entry) {\r\n        console.log(\"Axios Get Books\")\r\n        // console.log(params)\r\n        return axios.get(\"/api/google/\", { params: { q: entry } })\r\n    },\r\n    saveBook: function(book) {\r\n        console.log(\"Axios Save\")\r\n        console.log(book)\r\n        return axios.post(\"/api/books/\", book)\r\n    },\r\n    deleteBook: function(id) {\r\n        console.log(\"Axios Delete\")\r\n        console.log(id)\r\n        return axios.delete(\"/api/books/\"+ id)\r\n    }\r\n}","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Jumbotron, Card/*, Grid*/, Container, Row, Col,/* Collapse, CardColumns,*/ ListGroup } from \"react-bootstrap\";\r\nimport Form from \"../components/Form\";\r\nimport Book from \"../components/Book\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        books: [],\r\n        q: \"\",\r\n        message: \"Search For A Book To Begin!\"\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    getBooks = () => {\r\n        console.log(\"Get Books\")\r\n        console.log(this.state.q)\r\n        API.getBooks(this.state.q)\r\n            .then(res => {\r\n                console.log(res)\r\n                this.setState({\r\n                    books: res.data\r\n                })}\r\n            )\r\n            .catch(() =>\r\n                this.setState({\r\n                    books: [],\r\n                    message: \"No New Books Found, Try a Different Query\"\r\n                })\r\n            );\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.getBooks();\r\n    };\r\n\r\n    handleBookSave = id => {\r\n        const book = this.state.books.find(book => book.id === id);\r\n\r\n        API.saveBook({\r\n            googleId: book.id,\r\n            title: book.volumeInfo.title,\r\n            subtitle: book.volumeInfo.subtitle,\r\n            link: book.volumeInfo.infoLink,\r\n            authors: book.volumeInfo.authors,\r\n            description: book.volumeInfo.description,\r\n            image: book.volumeInfo.imageLinks.thumbnail\r\n        }).then(() => this.getBooks());\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <Jumbotron>\r\n                            <h1 className=\"text-center\">\r\n                                <strong>(React) Google Books Search</strong>\r\n                            </h1>\r\n                            <h2 className=\"text-center\">Search for and Save Books of Interest</h2>\r\n                        </Jumbotron>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <Card title=\"Book Search\" icon=\"far fa-book\">\r\n                            <Form\r\n                                handleInputChange={this.handleInputChange}\r\n                                handleFormSubmit={this.handleFormSubmit}\r\n                                q={this.state.q}\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <Card title=\"Results\">\r\n                            {this.state.books.length ? (\r\n                                <ListGroup>\r\n                                    {this.state.books.map(book => (\r\n                                        <Book\r\n                                            key={book.id}\r\n                                            title={book.volumeInfo.title}\r\n                                            subtitle={book.volumeInfo.subtitle}\r\n                                            link={book.volumeInfo.infoLink}\r\n                                            authors={book.volumeInfo.authors.join(\", \")}\r\n                                            description={book.volumeInfo.description}\r\n                                            image={book.volumeInfo.imageLinks.thumbnail}\r\n                                            Button={() => (\r\n                                                <button\r\n                                                    onClick={() => this.handleBookSave(book.id)}\r\n                                                    className=\"btn btn-primary ml-2\"\r\n                                                >\r\n                                                    Save\r\n                                                </button>\r\n                                            )}\r\n                                        />\r\n                                    ))}\r\n                                </ListGroup>\r\n                            ) : (\r\n                                <h2 className=\"text-center\">{this.state.message}</h2>\r\n                            )}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Jumbotron, Card /*Footer*/ } from \"react-bootstrap\";\r\nimport Book from \"../components/Book\";\r\nimport API from \"../utils/API\";\r\nimport { Col, Row, Container, ListGroup } from \"react-bootstrap\";\r\n\r\nclass Saved extends Component {\r\n    state = {\r\n        books: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getSavedBooks();\r\n    }\r\n\r\n    getSavedBooks = () => {\r\n        API.getSavedBooks()\r\n            .then(res =>\r\n                this.setState({\r\n                    books: res.data\r\n                })\r\n            )\r\n            .catch(err => console.log(err))\r\n    };\r\n\r\n    handleBooksDelete = id => {\r\n        API.deleteBook(id).then(res => this.getSavedBooks());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <Jumbotron>\r\n                            <h1 className=\"text-center\">\r\n                                <strong>(React) Google Books Search</strong>\r\n                            </h1>\r\n                            <h2 className=\"text-center\">Search for and Save Books of Interest.</h2>\r\n                        </Jumbotron>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <Card title=\"Saved Books\" icon=\"download\">\r\n                            {this.state.books.length ? (\r\n                                <ListGroup>\r\n                                    {this.state.books.map(book => (\r\n                                        <Book\r\n                                            key={book.id}\r\n                                            title={book.title}\r\n                                            subtitle={book.subtitle}\r\n                                            link={book.link}\r\n                                            authors={book.authors.join(\", \")}\r\n                                            description={book.description}\r\n                                            image={book.image}\r\n                                            Button={() => (\r\n                                                <button\r\n                                                    onClick={() => this.handleBooksDelete(book._id)}\r\n                                                    className=\"btn btn-danger m1-2\"\r\n                                                >\r\n                                                    Delete\r\n                                                </button>\r\n                                            )}\r\n                                        />\r\n                                    ))}\r\n                                </ListGroup>\r\n                            ) : (\r\n                                <h2 className=\"text-center\">No Saved Books</h2>\r\n                            )}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Saved;","import React from \"react\";\r\nimport { Col, Row, Container, Jumbotron } from \"react-bootstrap\";\r\n\r\nfunction NoMatch() {\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col size=\"md-12\">\r\n                    <Jumbotron>\r\n                        <h1 className=\"text-center\">404 Page Not Found</h1>\r\n                    </Jumbotron>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NoMatch;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Saved from \"./pages/Saved\";\nimport NoMatch from \"./pages/NoMatch\";\nimport { Container, Nav, Navbar, NavbarBrand } from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Container>\n            <NavbarBrand>React + Google Books</NavbarBrand>\n            <Nav className=\"me-auto\">\n                <Nav.Link href=\"/\">Home</Nav.Link>\n                <Nav.Link href=\"/saved\">Saved</Nav.Link>\n            </Nav>\n          </Container>\n        </Navbar>\n          <Switch>\n            <Route exact path=\"/saved\" component={Saved} />\n            <Route path=\"/\" component={Home} />            \n            <Route path=\"\" component={NoMatch} />\n          </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />,  document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}